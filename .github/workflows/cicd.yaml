# This workflow will build a .NET application Docker image and push it to Docker Hub

name: Build and Push .NET Docker Image

on:
  push:
    branches:
    - "master"
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest

    env:
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PW: ${{ secrets.DOCKER_PW }}

    steps:
    - name: Check out this repo
      uses: actions/checkout@v4

    # Step to create the Dockerfile dynamically
    - name: Create Dockerfile
      run: |
        echo 'FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base' > Dockerfile
        echo 'WORKDIR /app' >> Dockerfile
        echo 'EXPOSE 80' >> Dockerfile
        echo 'FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build' >> Dockerfile
        echo 'WORKDIR /src' >> Dockerfile
        echo 'COPY ["GithubActionsDemo/GithubActionsDemo.csproj", "GithubActionsDemo/"]' >> Dockerfile
        echo 'RUN dotnet restore "GithubActionsDemo/GithubActionsDemo.csproj"' >> Dockerfile
        echo 'COPY . .' >> Dockerfile
        echo 'WORKDIR "/src/GithubActionsDemo"' >> Dockerfile
        echo 'RUN dotnet build "GithubActionsDemo.csproj" -c Release -o /app/build' >> Dockerfile
        echo 'FROM build AS publish' >> Dockerfile
        echo 'RUN dotnet publish "GithubActionsDemo.csproj" -c Release -o /app/publish' >> Dockerfile
        echo 'FROM base AS final' >> Dockerfile
        echo 'WORKDIR /app' >> Dockerfile
        echo 'COPY --from=publish /app/publish ./' >> Dockerfile
        echo 'ENTRYPOINT ["dotnet", "GithubActionsDemo.dll"]' >> Dockerfile

    # Log in to Docker Hub using credentials stored in GitHub Secrets
    - name: Log in to Docker Hub
      run: |
        echo "$DOCKER_PW" | docker login -u "$DOCKER_USER" --password-stdin

    # Build Docker image from the newly created Dockerfile
    - name: Build Docker image
      run: |
        docker build -t zekath/mydotnetapp:latest .

    # Push Docker image to Docker Hub
    - name: Push Docker image
      run: |
        docker push zekath/mydotnetapp:latest
